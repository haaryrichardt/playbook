---
- hosts: sonar
  become: true
  tasks:
  - name: Install wget
    apt:
      name: wget
      state: present
      
  - name: Install unzip
    apt:
      name: unzip
      state: present

  - name: Install openjdk
    apt:
      name: openjdk-8-jdk
      state: present
      
  - name: Install python-psycopg2
    apt:
      name: python-psycopg2
      state: present
  
  - postgresql_user:
      db: postgres
      name: postgres
      password: postgres
      priv: "CONNECT/products:ALL"
      expire: infinity
   
  - name: Create sonar user in databse
    become_user: postgres
    postgresql_user:
      name: sonar
      password: sonar
      role_attr_flags: CREATEDB,NOSUPERUSER
     
  - name: Create sonar database
    become_user: postgres
    postgresql_db:
      name: sonar
      owner: sonar
      
  - name: Create sonar directory
    file:
      path: "/opt/sonar"
      state: directory

  - name: Extract SonarQube
    unarchive:
      src: https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-8.0.zip
      dest: /opt/sonar/
      remote_src: yes
      
  - name: Link this version of sonarqube as the server SonarQube version
    file:
      src: "/opt/sonar/sonarqube-8.0"
      dest: "/opt/sonarqube"
      state: link
      owner: sonar
      
  - name: Configure SonarQube DB username
    lineinfile:
      path: "/opt/sonarqube/conf/sonar.properties"
      regexp: "^sonar.jdbc.username="
      insertafter: "^#sonar.jdbc.username="
      line: "sonar.jdbc.username=sonar"

  - name: Configure SonarQube DB password
    lineinfile:
      path: "/opt/sonarqube/conf/sonar.properties"
      regexp: "^sonar.jdbc.password="
      insertafter: "^#sonar.jdbc.password="
      line: "sonar.jdbc.password=sonar"

  - name: Configure SonarQube DB connection string
    lineinfile:
      path: "/opt/sonarqube/conf/sonar.properties"
      regexp: "sonar.jdbc.url=jdbc:postgresql://localhost/sonar"
      insertafter: "^#sonar.jdbc.url=jdbc:postgresql://localhost/sonar"
      line: "sonar.jdbc.url=jdbc:postgresql://localhost:5432/sonar"

  - name: Configure SonarQube to run as the sonar user
    lineinfile:
      path: "/opt/sonarqube/bin/linux-x86-64/sonar.sh"
      regexp: "RUN_AS_USER=sonar"
      insertafter: "#RUN_AS_USER="
      line: "RUN_AS_USER=sonar"
      
  - name: Adding user to visudo
    lineinfile:
      path: /etc/sudoers
      state: present
      regexp: '^%ADMIN ALL='
      line: 'sonar   ALL=(ALL)  NOPASSWD: ALL'
      validate: '/usr/sbin/visudo -cf %s'

  - name: start sonarqube
    shell:
     cmd: /opt/sonarqube/bin/linux-x86-64/sonar.sh start
     
  - name: Enable Firewall
    ufw:
     state: enabled
    
  - name: Allow Port 8080
    ufw:
     rule: allow
     port: '9000'
    
  - name: Allow OpenSSH
    ufw:
     rule: allow
     name: OpenSSH
  
